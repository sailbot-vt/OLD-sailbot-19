File: consumer

	FUNCTIONS

		register_to_consume_data(<channel_name>, <data_callback>)
			***Register with relay to consume data on channel_name***
			***Accesses hash table in relay to find when to grab data***

		data_callback_wrapper(data_size, data_ptr, <data_callback>)
			***Dereference data and pass to data_callback***
			(data_callback will likely be a user provided function, so need to pass a python object to it)

File: producer

	FUNCTIONS

		register_to_produce_data(<channel_name>)
			***Register with relay to produce data on channel_name***

		publish_data(<channel_name>, data_size, data_ptr)
			***Receives encoded data and finds data_size, sends over socket to relay***
			(Receives python object (np array?) and encodes it before sending)

File: relay

	FUNCTIONS

		forward_data(<channel_name>, data_size, data_ptr)
			***Sends signal to data_callback_wrapper that there's new data***
			(gets signal from publish data when it puts data in shmem)

		create_buffer(<channel_name>)
			***Gets shared memory pointer and shares it back to register_to_produce_data***
			***Keeps hash table of channel_names and pointers to shmem***
			RETURNS:
				shared_memory ptr for producer to publish to
